// 2015-07-02
// Строка настроек со всеми планами.
// Наша первейшая задача: высвободиь дополнительное место для настроек
// (ведь их у нас так много!).
.row.setting.paid-membership_plans {
	// На всякий случай.
	width: 100%;
	overflow: hidden;
	// На будущее. Пока в ядре они и так нулевые
	margin: {left: 0; right: 0;}
	padding: {left: 0; right: 0;}
	> .setting-label {}
	> .setting-value {
		// В ядре: 73%.
		// Устанавливая 100%, мы «пропускаем» вперёд и вверх кнопки.
		width: 100%;
	}
	// «button» — это кнопка «Reset».
	> button {}
	// div..setting-controls — это две кнопки: сохранить и отменить.
	// Они появляются на месте кнопки «Reset» после редактирования какой-либо опции.
	>.setting-controls {
		float: none;
		display: inline-block;
	}
}
.paid-membership-plans {
	padding-right: 4px;
	> .inner {
		margin-left: 10%;
	}
	ul.plans {
		margin: {
			left: 0;
		}
	}
	h4 {
		&.add-new-plan {font-size: 14px;}
		&.plan-title {display: inline;}
	}
	// 2015-06-30
	// Этот размер использует ядро для экранных названий настроечных опций
	.label, h5 {
		font-size: 0.929em;
		font-weight: normal;
		line-height: 1.2em;
	}
	.item {
		.field {
			// 2015-06-30
			// Обратите внимание, что селектор :first-of-type игнорирует классы
			// и учитывает лишь тег элемента: http://stackoverflow.com/a/8539107/254475
			// Но нам пока и этого достаточно.
			&:first-of-type {
				width: 100%;
				overflow: hidden;
				margin-bottom: 0;
				button {float: right;}
			}
			&:not(:first-of-type) {margin-top: 8px;}
			&.color {
				.label {
					float: left;
					line-height: 26px;
					margin-right: 4px;
				}
				.hex-input {
					width: 4em;
					border: 1px;
					padding: 4px;
					text-align: center;
				}
			}
			input, select, option {font-size: 14px;}
			.plan-title input {
				font-size: 18px;
				// Ядро устанавливает 18px
				height: auto;
				line-height: normal;
				font-weight: bold;
				color: rgb(103, 96, 86);
			}
			.plan-bbcode {
				&:after {
					content: ']';
					vertical-align: text-top;}
				&:before {
					content: '[';
					vertical-align: text-top;
				}
				input {vertical-align: text-top;}
			}
			textarea {
				width: 100%;
				box-sizing: border-box;
				color: rgb(145, 145, 145);
				&:active, &:hover, &:focus {color: #222222;}
			}
			input, select {
				&:active, &:hover, &:focus {color: #222222;}
				border: 0;
				box-shadow: none;
				padding: 0;
				&.amount {padding-right: 2px;}
				option {padding: 0;}
				&.periodUnits {width: 6em;}
				&.restrictionType {width: 6em;}
			}
		}
		&.plan {margin-top: 16px;}
	}
	.paid-membership-price-tiers {
		margin: 8px 0;
		max-width: 20em;
	}
	.items {
		&.plans {margin-bottom: 24px;}
		&.tiers {margin-bottom: 8px;}
		.item {
			&.plan {
				&:not(:last-of-type) {margin-bottom: 16px;}
			}
		}
	}
	button.df-simple {
		background: transparent;
		padding: {
			top: 0;
			bottom: 0;
		}
		i.fa {color: rgb(145, 145, 145);}
		&:hover {
			i {
				&.fa-times {color: #e45735;}
			}
		}
	}
}